buildscript
{
    repositories
    {
        mavenCentral()
        maven
        {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven
        {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies
    {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}
apply plugin: 'forge'

version = "1.7.2-2.1.3"
group = ""
archivesBaseName = "Minestrappolation"

sourceSets.main.java
{
    srcDirs project.projectDir.getPath() include("src/main/java/com/minestrappolation/**")
}
sourceSets.main.resources
{
    srcDirs project.projectDir.getPath() include("src/main/resources/assets/**")
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

minecraft
{
    version = "1.7.2-10.12.1.1074"
  
	if(file('../run').exists())
	{
		assetDir = "../run/assets/"
	}
	else
	{
		assetDir = "eclipse/assets"
	}
}

dependencies
{
	compile fileTree(dir:'libs',include:'*.zip')
}

jar
{
    //Keep the jar as clean as possible
    includeEmptyDirs = false
	//package dependencies in.
	//from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}

processResources
{
    // copy everything else, thats not mcmod.info
    from(project.sourceSets.main.resources.srcDirs)
    {
        include("*.png", "*.lang")
    }
}

task unJar(type:Copy, dependsOn:'build')
unJar
{
    from zipTree(jar.archivePath)
    into 'build/unjar'
}

task buildCore(type:Jar, dependsOn:'unJar')
buildCore
{
    archiveName = "MinestrappolationCore " + minecraft.version + "-1.0.0." + extension
    from 'build/unjar'
    include('assets/**', 'com/minestrappolation/core/**')
    
    from('api_info')
    {
        include('mcmod.info')
        // replace version and mcversion
        expand([version:version, mcversion:minecraft.version])
    }
}

task buildM(type:Jar, dependsOn:'unJar')
buildM
{
    archiveName = "Minestrappolation " + minecraft.version + "-1.0.0." + extension
    from 'build/unjar'
    {
    include('assets/**', 'com/minestrappolation/**')
    }
    
    from('api_info')
    {
        include('mcmod.info')
        // replace version and mcversion
        expand([version:version, mcversion:minecraft.version])
    }
}

task buildAll(dependsOn:['buildAPI','build'])

package minestrapteam.minestrappolation.client.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelWorkbench extends ModelBase
{
	// fields
	ModelRenderer Base;
	ModelRenderer FrontSaw1;
	ModelRenderer FrontSaw2;
	ModelRenderer FrontSaw3;
	ModelRenderer FrontSaw4;
	ModelRenderer FrontSaw5;
	ModelRenderer FrontSaw6;
	ModelRenderer FrontHammer1;
	ModelRenderer FrontHammer2;
	ModelRenderer FrontHammer3;
	ModelRenderer RightSaw1;
	ModelRenderer RightSaw2;
	ModelRenderer RightSaw3;
	ModelRenderer RightSaw4;
	ModelRenderer RightSaw5;
	ModelRenderer RightSaw6;
	ModelRenderer RightHammer1;
	ModelRenderer RightHammer2;
	ModelRenderer RightHammer3;
	ModelRenderer LeftCutter1;
	ModelRenderer LeftCutter2;
	ModelRenderer LeftCutter3;
	ModelRenderer LeftCutter4;
	ModelRenderer LeftCutter5;
	ModelRenderer BackCutter1;
	ModelRenderer BackCutter2;
	ModelRenderer BackCutter3;
	ModelRenderer BackCutter4;
	ModelRenderer BackCutter5;

	public ModelWorkbench()
	{
		textureWidth = 64;
		textureHeight = 32;

		Base = new ModelRenderer(this, 0, 0);
		Base.addBox(0F, 0F, 0F, 16, 16, 16);
		Base.setRotationPoint(-8F, 8F, -8F);
		Base.setTextureSize(64, 32);
		Base.mirror = true;
		setRotation(Base, 0F, 0F, 0F);
		FrontSaw1 = new ModelRenderer(this, 48, 0);
		FrontSaw1.addBox(0F, 0F, 0F, 3, 1, 1);
		FrontSaw1.setRotationPoint(3F, 11F, -9F);
		FrontSaw1.setTextureSize(64, 32);
		FrontSaw1.mirror = true;
		setRotation(FrontSaw1, 0F, 0F, 0F);
		FrontSaw2 = new ModelRenderer(this, 56, 0);
		FrontSaw2.addBox(0F, 0F, 0F, 1, 1, 1);
		FrontSaw2.setRotationPoint(3F, 12F, -9F);
		FrontSaw2.setTextureSize(64, 32);
		FrontSaw2.mirror = true;
		setRotation(FrontSaw2, 0F, 0F, 0F);
		FrontSaw3 = new ModelRenderer(this, 60, 0);
		FrontSaw3.addBox(0F, 0F, 0F, 1, 1, 1);
		FrontSaw3.setRotationPoint(5F, 12F, -9F);
		FrontSaw3.setTextureSize(64, 32);
		FrontSaw3.mirror = true;
		setRotation(FrontSaw3, 0F, 0F, 0F);
		FrontSaw4 = new ModelRenderer(this, 48, 2);
		FrontSaw4.addBox(0F, 0F, 0F, 3, 3, 1);
		FrontSaw4.setRotationPoint(3F, 13F, -9F);
		FrontSaw4.setTextureSize(64, 32);
		FrontSaw4.mirror = true;
		setRotation(FrontSaw4, 0F, 0F, 0F);
		FrontSaw5 = new ModelRenderer(this, 56, 2);
		FrontSaw5.addBox(0F, 0F, 0F, 2, 3, 1);
		FrontSaw5.setRotationPoint(4F, 16F, -9F);
		FrontSaw5.setTextureSize(64, 32);
		FrontSaw5.mirror = true;
		setRotation(FrontSaw5, 0F, 0F, 0F);
		FrontSaw6 = new ModelRenderer(this, 48, 6);
		FrontSaw6.addBox(0F, 0F, 0F, 1, 2, 1);
		FrontSaw6.setRotationPoint(5F, 19F, -9F);
		FrontSaw6.setTextureSize(64, 32);
		FrontSaw6.mirror = true;
		setRotation(FrontSaw6, 0F, 0F, 0F);
		FrontHammer1 = new ModelRenderer(this, 48, 9);
		FrontHammer1.addBox(0F, 0F, 0F, 1, 4, 1);
		FrontHammer1.setRotationPoint(-5F, 13F, -9F);
		FrontHammer1.setTextureSize(64, 32);
		FrontHammer1.mirror = true;
		setRotation(FrontHammer1, 0F, 0F, 0F);
		FrontHammer2 = new ModelRenderer(this, 48, 14);
		FrontHammer2.addBox(0F, 0F, 0F, 2, 1, 1);
		FrontHammer2.setRotationPoint(-6F, 17F, -9F);
		FrontHammer2.setTextureSize(64, 32);
		FrontHammer2.mirror = true;
		setRotation(FrontHammer2, 0F, 0F, 0F);
		FrontHammer3 = new ModelRenderer(this, 52, 6);
		FrontHammer3.addBox(0F, 0F, 0F, 1, 3, 1);
		FrontHammer3.setRotationPoint(-4F, 16F, -9F);
		FrontHammer3.setTextureSize(64, 32);
		FrontHammer3.mirror = true;
		setRotation(FrontHammer3, 0F, 0F, 0F);
		RightSaw1 = new ModelRenderer(this, 56, 6);
		RightSaw1.addBox(0F, 0F, 0F, 1, 1, 3);
		RightSaw1.setRotationPoint(-9F, 11F, -6F);
		RightSaw1.setTextureSize(64, 32);
		RightSaw1.mirror = true;
		setRotation(RightSaw1, 0F, 0F, 0F);
		RightSaw2 = new ModelRenderer(this, 54, 14);
		RightSaw2.addBox(0F, 0F, 0F, 1, 1, 1);
		RightSaw2.setRotationPoint(-9F, 12F, -6F);
		RightSaw2.setTextureSize(64, 32);
		RightSaw2.mirror = true;
		setRotation(RightSaw2, 0F, 0F, 0F);
		RightSaw3 = new ModelRenderer(this, 58, 14);
		RightSaw3.addBox(0F, 0F, 0F, 1, 1, 1);
		RightSaw3.setRotationPoint(-9F, 12F, -4F);
		RightSaw3.setTextureSize(64, 32);
		RightSaw3.mirror = true;
		setRotation(RightSaw3, 0F, 0F, 0F);
		RightSaw4 = new ModelRenderer(this, 0, 10);
		RightSaw4.addBox(0F, 0F, 0F, 1, 3, 3);
		RightSaw4.setRotationPoint(-9F, 13F, -6F);
		RightSaw4.setTextureSize(64, 32);
		RightSaw4.mirror = true;
		setRotation(RightSaw4, 0F, 0F, 0F);
		RightSaw5 = new ModelRenderer(this, 8, 11);
		RightSaw5.addBox(0F, 0F, 0F, 1, 3, 2);
		RightSaw5.setRotationPoint(-9F, 16F, -6F);
		RightSaw5.setTextureSize(64, 32);
		RightSaw5.mirror = true;
		setRotation(RightSaw5, 0F, 0F, 0F);
		RightSaw6 = new ModelRenderer(this, 52, 10);
		RightSaw6.addBox(0F, 0F, 0F, 1, 2, 1);
		RightSaw6.setRotationPoint(-9F, 19F, -6F);
		RightSaw6.setTextureSize(64, 32);
		RightSaw6.mirror = true;
		setRotation(RightSaw6, 0F, 0F, 0F);
		RightHammer1 = new ModelRenderer(this, 8, 6);
		RightHammer1.addBox(0F, 0F, 0F, 1, 4, 1);
		RightHammer1.setRotationPoint(-9F, 13F, 4F);
		RightHammer1.setTextureSize(64, 32);
		RightHammer1.mirror = true;
		setRotation(RightHammer1, 0F, 0F, 0F);
		RightHammer2 = new ModelRenderer(this, 56, 10);
		RightHammer2.addBox(0F, 0F, 0F, 1, 1, 2);
		RightHammer2.setRotationPoint(-9F, 17F, 4F);
		RightHammer2.setTextureSize(64, 32);
		RightHammer2.mirror = true;
		setRotation(RightHammer2, 0F, 0F, 0F);
		RightHammer3 = new ModelRenderer(this, 0, 6);
		RightHammer3.addBox(0F, 0F, 0F, 1, 3, 1);
		RightHammer3.setRotationPoint(-9F, 16F, 3F);
		RightHammer3.setTextureSize(64, 32);
		RightHammer3.mirror = true;
		setRotation(RightHammer3, 0F, 0F, 0F);
		LeftCutter1 = new ModelRenderer(this, 4, 7);
		LeftCutter1.addBox(0F, 0F, 0F, 1, 2, 1);
		LeftCutter1.setRotationPoint(8F, 13F, -5F);
		LeftCutter1.setTextureSize(64, 32);
		LeftCutter1.mirror = true;
		setRotation(LeftCutter1, 0F, 0F, 0F);
		LeftCutter2 = new ModelRenderer(this, 4, 5);
		LeftCutter2.addBox(0F, 0F, 0F, 1, 1, 1);
		LeftCutter2.setRotationPoint(8F, 15F, -4F);
		LeftCutter2.setTextureSize(64, 32);
		LeftCutter2.mirror = true;
		setRotation(LeftCutter2, 0F, 0F, 0F);
		LeftCutter3 = new ModelRenderer(this, 12, 8);
		LeftCutter3.addBox(0F, 0F, 0F, 1, 2, 1);
		LeftCutter3.setRotationPoint(8F, 13F, -3F);
		LeftCutter3.setTextureSize(64, 32);
		LeftCutter3.mirror = true;
		setRotation(LeftCutter3, 0F, 0F, 0F);
		LeftCutter4 = new ModelRenderer(this, 12, 5);
		LeftCutter4.addBox(0F, 0F, 0F, 1, 2, 1);
		LeftCutter4.setRotationPoint(8F, 16F, -5F);
		LeftCutter4.setTextureSize(64, 32);
		LeftCutter4.mirror = true;
		setRotation(LeftCutter4, 0F, 0F, 0F);
		LeftCutter5 = new ModelRenderer(this, 8, 3);
		LeftCutter5.addBox(0F, 0F, 0F, 1, 2, 1);
		LeftCutter5.setRotationPoint(8F, 16F, -3F);
		LeftCutter5.setTextureSize(64, 32);
		LeftCutter5.mirror = true;
		setRotation(LeftCutter5, 0F, 0F, 0F);
		BackCutter1 = new ModelRenderer(this, 12, 2);
		BackCutter1.addBox(0F, 0F, 0F, 1, 2, 1);
		BackCutter1.setRotationPoint(4F, 13F, 8F);
		BackCutter1.setTextureSize(64, 32);
		BackCutter1.mirror = true;
		setRotation(BackCutter1, 0F, 0F, 0F);
		BackCutter2 = new ModelRenderer(this, 0, 4);
		BackCutter2.addBox(0F, 0F, 0F, 1, 1, 1);
		BackCutter2.setRotationPoint(3F, 15F, 8F);
		BackCutter2.setTextureSize(64, 32);
		BackCutter2.mirror = true;
		setRotation(BackCutter2, 0F, 0F, 0F);
		BackCutter3 = new ModelRenderer(this, 4, 2);
		BackCutter3.addBox(0F, 0F, 0F, 1, 2, 1);
		BackCutter3.setRotationPoint(2F, 13F, 8F);
		BackCutter3.setTextureSize(64, 32);
		BackCutter3.mirror = true;
		setRotation(BackCutter3, 0F, 0F, 0F);
		BackCutter4 = new ModelRenderer(this, 8, 0);
		BackCutter4.addBox(0F, 0F, 0F, 1, 2, 1);
		BackCutter4.setRotationPoint(4F, 16F, 8F);
		BackCutter4.setTextureSize(64, 32);
		BackCutter4.mirror = true;
		setRotation(BackCutter4, 0F, 0F, 0F);
		BackCutter5 = new ModelRenderer(this, 0, 1);
		BackCutter5.addBox(0F, 0F, 0F, 1, 2, 1);
		BackCutter5.setRotationPoint(2F, 16F, 8F);
		BackCutter5.setTextureSize(64, 32);
		BackCutter5.mirror = true;
		setRotation(BackCutter5, 0F, 0F, 0F);
	}

	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
	{
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5);
		Base.render(f5);
		FrontSaw1.render(f5);
		FrontSaw2.render(f5);
		FrontSaw3.render(f5);
		FrontSaw4.render(f5);
		FrontSaw5.render(f5);
		FrontSaw6.render(f5);
		FrontHammer1.render(f5);
		FrontHammer2.render(f5);
		FrontHammer3.render(f5);
		RightSaw1.render(f5);
		RightSaw2.render(f5);
		RightSaw3.render(f5);
		RightSaw4.render(f5);
		RightSaw5.render(f5);
		RightSaw6.render(f5);
		RightHammer1.render(f5);
		RightHammer2.render(f5);
		RightHammer3.render(f5);
		LeftCutter1.render(f5);
		LeftCutter2.render(f5);
		LeftCutter3.render(f5);
		LeftCutter4.render(f5);
		LeftCutter5.render(f5);
		BackCutter1.render(f5);
		BackCutter2.render(f5);
		BackCutter3.render(f5);
		BackCutter4.render(f5);
		BackCutter5.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z)
	{
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
	{
		super.setRotationAngles(f, f1, f2, f3, f4, f5, null);
	}

}
